create or replace
function admin.products_get
(
    acategory_id integer,
    aname varchar,
    aorder_by varchar,
    aorder_dir varchar,
    apage integer default 0
) returns table
(
    id integer,
    manufacturer_name varchar,
    manufacturer_id integer,
    name varchar,
    available integer,
    price numeric,
    sku varchar,
    viewed integer,
    url varchar,
    previous_price numeric
) as $$
declare
    vsql text; vbase_query text;
begin
    vbase_query := $sql$
               shop.product p
          left join shop.manufacturer m on m.id = p.manufacturer_id
         where ((lower(p.name) like '%' || lower($1) || '%') or (lower(p.sku) like '%' || lower($1) || '%') or $1 is null)
           and (exists (select * from product_category pc where pc.product_id = p.id and pc.category_id = $2 or $2 is null))
    $sql$;

    if apage > 0 then
        vsql := $sql$
            select p.id, m.name::varchar,
                   m.id, p.name::varchar,
                   p.available,
                   p.price,
                   p.sku::varchar,
                   p.viewed,
                   web.product_url_get(p.id),
                   p.previous_price
            from {base_query}
            order by {order_by} {order_dir}
            limit 20 offset {offset}
        $sql$;
    else
        vsql := 'select count(*)::int, null::varchar, null::int, null::varchar, null::int,
                        null::numeric, null::varchar, null::int, null::varchar, null::numeric
                   from {base_query}';
    end if;

    vsql := replace(vsql, '{base_query}', vbase_query);
    vsql := replace(vsql, '{order_by}', aorder_by);
    vsql := replace(vsql, '{order_dir}', aorder_dir);
    vsql := replace(vsql, '{offset}', ((apage - 1) * 20)::text);

    return query execute vsql using aname, acategory_id;
end;
$$ language plpgsql security definer;

comment on function admin.products_get(integer, varchar, varchar, varchar, integer) is 'Returns all products in shop';

alter function admin.products_get(integer, varchar, varchar, varchar, integer) owner to shop;
