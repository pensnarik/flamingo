create or replace
function web.create_order
(
    acustomer_secret char(32),
    aemail           varchar,
    aphone           varchar,
    aname            varchar,
    acity            varchar,
    aaddress         varchar,
    aip              inet,
    auser_agent      varchar,
    adelivery_code   varchar,
    adelivery_name   varchar,
    adelivery_cost   numeric,
    alast_name       varchar,
    apatronymic_name varchar,
    apayment_method_id integer,
    oid              out integer,
    otoken           out char(32)
) returns record as $$
declare
    vcustomer_id integer := shop.get_customer_id(acustomer_secret);
    vorder_id integer; vamount numeric;
begin
    -- Заказ создаётся на основе содержимого корзины

    if (select count(*) from shop.cart where customer_id = vcustomer_id) = 0 then
        oid := -1;
        return;
    end if;

    insert into shop.customer_order(customer_id, email, phone, name, city,
        address, ip, user_agent, delivery_code, delivery_name, delivery_cost,
        last_name, patronymic_name, payment_method_id)
    values (vcustomer_id, aemail, aphone, aname, acity, aaddress, aip,
        auser_agent, adelivery_code, adelivery_name, adelivery_cost,
        alast_name, apatronymic_name, apayment_method_id)
    returning id, token into oid, otoken;

    -- Добавляем товары из корзины в заказ
    insert into shop.order_item (order_id, product_id, price, quantity, amount)
    select oid, c.product_id, p.price, c.quantity, round(c.quantity * p.price, 2)
      from shop.cart c
      join shop.product p
        on p.id = c.product_id
     where c.customer_id = vcustomer_id
     order by p.id;

    -- Обновляем итоговую сумму в заказе
    update shop.customer_order
       set amount = (select sum(amount) from shop.order_item where order_id = oid)
     where id = oid;

    -- Очищаем корзину
    delete from shop.cart where customer_id = vcustomer_id;

    perform shop.after_order_spam_check(oid);
end;
$$ language plpgsql security definer;